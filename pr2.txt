import React from 'react';
export default class LifeCycleClass extends React.Component {
    constructor(props)
    {
        super(props);
        this.state = { hello : "Amir !" };
        console.log("constructo call")
    }
 
    static getDerivedStateFromProps(props, state) {
        console.log('  getDerivedStateFromProps');
       }
    componentWillMount()
    {
        console.log("componentWillMount()");
    }
 
    componentDidMount()
    {
        console.log("componentDidMount()");
    }
 
    changeState()
    {
        this.setState({ hello : "Saipa" });
    }
 
    render()
    {
        return (
            <div>
            <h1>Test for check Cycle, Hello{ this.state.hello }</h1>
            <h2>
            <a onClick={this.changeState.bind(this)}>Press Here!</a>
            </h2>
            </div>);
    }
 
    shouldComponentUpdate(nextProps, nextState)
    {
        console.log("shouldComponentUpdate()");
        return true;
    }
 
    
 
    componentDidUpdate()
    {
        console.log("componentDidUpdate()");
    }
}
 ----------------------------------
 import React, { Component } from 'react';

export default class LifeCycleClass2 extends Component {

  constructor(props){
    super(props);
    this.state = {
      data: 'saipa'
    }
  }
 
  getData(){
    setTimeout(() => {
      console.log('Our data is fetched');
      this.setState({
        data: 'hello saipa'
      })
    }, 3000)
  }

  componentDidMount(){
    this.getData();
  }

  render() {
    return(
      <div>
      {this.state.data}
    </div>
    )
  }
}

